#
# zPlug as package manager
#
source ~/.zplug/init.zsh
# Supports oh-my-zsh plugins and the like
zplug "plugins/git",   from:oh-my-zsh
# Load theme file
zplug 'gcaracuel/gaia.zsh-theme', as:theme
#zplug "$HOME/Documents/Projects/bureau.zsh-theme", as:theme, from:local, use:"bureau.zsh-theme"
zplug "lib/*", from:oh-my-zsh   # Load oh-my-zsh and then just select plugins
zplug "plugins/osx", from:oh-my-zsh, if:"[[ $OSTYPE == *darwin* ]]"
zplug "plugins/brew", from:oh-my-zsh, if:"[[ $OSTYPE == *darwin* ]]"
zplug "plugins/dnf", from:oh-my-zsh, if:"[[ $OSTYPE == *linux* ]]"
zplug "plugins/systemd", from:oh-my-zsh, if:"[[ $OSTYPE == *linux* ]]"
zplug "plugins/git", from:oh-my-zsh
zplug "plugins/key-bindings", from:oh-my-zsh
zplug "plugins/pip", from:oh-my-zsh
zplug "plugins/common-aliases", from:oh-my-zsh
zplug "plugins/git-extras", from:oh-my-zsh
zplug "plugins/npm", from:oh-my-zsh
zplug "plugins/z", from:oh-my-zsh
zplug "plugins/virtualenv", from:oh-my-zsh
zplug "plugins/virtualenvwrapper", from:oh-my-zsh
#zplug "plugins/svn", from:oh-my-zsh
zplug "plugins/thefuck", from:oh-my-zsh
zplug "plugins/sudo", from:oh-my-zsh
zplug "plugins/node", from:oh-my-zsh
zplug "plugins/mvn", from:oh-my-zsh
zplug "plugins/docker", from:oh-my-zsh
zplug "zsh-users/zsh-syntax-highlighting"
zplug "zsh-users/zsh-completions"
#zplug "bbenne10/goenv"
zplug "plugins/vault", from:oh-my-zsh
zplug "plugins/kubectl", from:oh-my-zsh
zplug "plugins/helm", from:oh-my-zsh
#zplug "plugin/dotenv", from:oh-my-zsh
zplug "plugin/terraform", from:oh-my-zsh

# Install plugins if there are plugins that have not been installed
zplug check || zplug install
zplug load

# TO UPDATE USE (from time to time): zplug status + zplug update

DEFAULT_USER=$USER

# Enable dotenv plugin
#ZSH_DOTENV_FILE=.env

export PATH="/usr/local/opt/openssl/bin:/sbin/:/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/sbin:$HOME/.local/bin:$HOME/bin"
# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor
export EDITOR='/usr/bin/vim'

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/dsa_id"

# Theme configuration
GAIA_THEME_NVM_SHOW="false"
GAIA_THEME_JAVA_SHOW="false"
GAIA_THEME_VENV_SHOW="true"
GAIA_THEME_RUBY_SHOW="false"
GAIA_THEME_K8S_SHOW="true"
GAIA_THEME_GCP_SHOW="true"
GCP_PS1_BINARY="/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/bin/gcloud" # Overrides gcloud command location
GAIA_THEME_TF_SHOW="true"



KUBE_PS1_BINARY="/usr/local/bin/kubectl"    # Use this at OSX

# NVM
export NVM_DIR="$HOME/.nvm"
#[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "/usr/local/opt/nvm/nvm.sh" ] && . "/usr/local/opt/nvm/nvm.sh" # OSX

# RVM
rvm_silence_path_mismatch_check_flag=1     # This silence a dummy bug when using RVM and virtualenv at the same time
[[ -s "$HOME/.rvm/scripts/rvm" ]] && . "$HOME/.rvm/scripts/rvm"
PERL_MB_OPT="--install_base \"/home/gcaracuel/perl5\""; export PERL_MB_OPT;
PERL_MM_OPT="INSTALL_BASE=/home/gcaracuel/perl5"; export PERL_MM_OPT;

# VirtualEnv
VIRTUALENVWRAPPER_PYTHON=/usr/local/bin/python3
[ -s "/usr/local/bin/virtualenvwrapper.sh" ] && . /usr/local/bin/virtualenvwrapper.sh
# Auto enable virtualenvs based on .venv file
[ -s "/usr/local/opt/autoenv/activate.sh" ] && source /usr/local/opt/autoenv/activate.sh   # changed line to set mountpoint to /

# Golang
export GOPATH="$HOME/go"
export PATH="$PATH:${GOPATH//://bin:}/bin"
#     https://github.com/getstream/vg
# command -v vg >/dev/null 2>&1 && eval "$(vg eval --shell zsh)"

# SDK - The Software Development Kit Manager
[ -s "$HOME/.sdkman/bin/sdkman-init.sh" ] && . "$HOME/.sdkman/bin/sdkman-init.sh"

# JAVA
case `uname` in
  Darwin)
    export JAVA_17_HOME=$(/usr/libexec/java_home -v17)
    alias java17='export JAVA_HOME=$JAVA_16_HOME'
    export JAVA_HOME=$JAVA_17_HOME
    ;;
  Linux)
    export JAVA_HOME=$(dirname $(dirname $(readlink -f $(which java))))
    ;;
esac

# Aliases
alias zshconfig="vim ~/.zshrc"
alias ohmyzsh="vim ~/.oh-my-zsh"

# BYOBU aliases
alias b='byobu'

# Vagrant
export VAGRANT_DEFAULT_PROVIDER=virtualbox

# Ansible
export ANSIBLE_STDOUT_CALLBACK=debug

# Load VTE
[ -s "/etc/profile.d/vte.sh" ] && \. /etc/profile.d/vte.sh

# Gcloud
[ -s "/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/completion.zsh.inc" ] && source /usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/completion.zsh.inc
[ -s "/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.zsh.inc" ] && source /usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.zsh.inc

# One-liners repository
#
# - remove intermediate docker images:       docker rmi $(docker images -f “dangling=true” -q)
# - remove exited docker containers:         docker ps -a | grep "Exited" | cut -d ' ' -f 1 | xargs sudo docker rm


# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder
# This loads nvm bash_completion

alias twa='terraform apply -var-file=$(terraform workspace show).tfvars'
alias twp='terraform plan -var-file=$(terraform workspace show).tfvars'
alias twc='terraform console -var-file=$(terraform workspace show).tfvars'
alias twd='terraform destroy -var-file=$(terraform workspace show).tfvars'

alias gcloud-config='gcloud config configurations' # Use as gcloud-config list | gcloud-config activate <config-name>


[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"

export PYTHONPATH="/Users/gcaracuel/Projects/Predictiva/datalab/datalab/:$PYTHONPATH"

eval $(thefuck --alias)

source $HOME/Documents/.env

# krew path
export PATH="${KREW_ROOT:-$HOME/.krew}/bin:$PATH"

# Configure as per https://cloud.google.com/blog/products/containers-kubernetes/kubectl-auth-changes-in-gke
export USE_GKE_GCLOUD_AUTH_PLUGIN=True

source "$(brew --prefix)/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/completion.zsh.inc"
